---
title: "Creating images with R"
subtitle: "with a little bit of magick"
author: "Daniel Choo"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, error=FALSE)
```

```{css}
body {
  font-family: 'Georgia', serif;
  line-height: 1.75;
  background-color: #f8f9fa;
  color: #000000;
}

h1, h2, h3 {
  color: #17a2b8;
  border-bottom: 2px solid #dee2e6;
}

a:hover {
  color: #28a745;
  text-decoration: none;
  border-bottom: 1px dashed;
}

pre, code {
  background-color: #f8f9fa; 
  border: 1px solid #dee2e6; 
}
```

## Project requirements

Throughout this project, I've established a workflow integrating GitHub to manage and share my work. I've created a repository called 'stats220' on GitHub, which serves as a platform for the documentation relevant to my statistics project. The link to my repository and website can be accessed via these links: [GitHub Repository](https://github.com/daniellchoo/stats220) \| [GitHub Website](https://github.com/daniellchoo).

Each step in the process of building my statistical models and generating memes has been meticulously documented and committed to this repository, ensuring version control and transparency of my workflow. The '.Rproject' setup within RStudio has been pivotal for maintaining project organisation and streamlining the process from coding to output generation.

![Project Folder Structure](/Users/danielchoo/Documents/Screenshot%202024-03-11%20at%2015.46.54.png)

## My meme

![](https://imageio.forbes.com/blogs-images/olliebarder/files/2018/05/pigeon_meme_fighbird-1200x806.jpg?height=477&width=711&fit=bounds)

The original "Is this a pigeon?" meme feature a man misidentifying a butterfly as a pigeon. I've adapted this to reflect the confusion or blending of concepts that can occur when diving into statistical programming for the first time, highlighting the learning curve in understanding how programming applies to statistical analysis. The key features I have changed is adding a blank image that displays "Is this Statistics?" or "Am I in the right course?" by using a random coin flip function to play with this idea of the meme. With the animation I have added text that showcases the process of slowly understanding what this course about.

```{r meme-code, eval=TRUE}
# Load the magick package
library(magick)

# Create Static Meme

# Read an image into R
original_image <- image_read("https://imageio.forbes.com/blogs-images/olliebarder/files/2018/05/pigeon_meme_fighbird-1200x806.jpg?height=477&width=711&fit=bounds") %>% 
  image_scale(500) # Scales the image to a width of 500, maintaining aspect ratio

coin_flip <- sample(c("Heads", "Tails"), size = 1)

# Conditional text based on coin flip
meme_text <- if(coin_flip == "Heads") "Is this Statistics?" else "Am I in the right course?"

# Create a blank image for text with a specified size and color
text_image <- image_blank(width = 500, 
                          height = 100, 
                          color = "#000000") %>%
  image_annotate(text = meme_text, 
                 color = "#FFFFFF", 
                 size = 20,
                 font = "Impact",
                 gravity = "center") # Ensure text fits within the image

# Combine the original image with the annotated text image
meme <- c(original_image, text_image) %>%
  image_append(stack = TRUE) # Stack vertically

# Save the meme as an image file
image_write(meme, "my_meme.png")

# Display the meme
print(meme)
```

```{r animation-code, eval=FALSE}
# Create Animated GIF

meme_base <- image_read("https://imageio.forbes.com/blogs-images/olliebarder/files/2018/05/pigeon_meme_fighbird-1200x806.jpg?height=477&width=711&fit=bounds")

frame1 <- meme %>%
  image_annotate(text = "Is this really Statistics?", size = 20, color = "#FFFFFF", font = "Impact", gravity = "south")

frame2 <- meme %>%
  image_annotate(text = "Or a random sample of confusion?", size = 20, color = "#FFFFFF", font = "Impact", gravity = "south")

frame3 <- meme %>%
  image_annotate(text = "Maybe I'll get it just a standard deviation away?", size = 20, color = "#FFFFFF", font = "Impact", gravity = "south")

frame4 <- meme %>%
  image_annotate(text = "Oh wait, it's machine learning!", size = 20, color = "#FFFFFF", font = "Impact", gravity = "south")

frame5 <- meme %>%
  image_annotate(text = "And statistical programming with R!", size = 20, color = "#FFFFFF", font = "Impact", gravity = "south")

# Combine the frames into a single image object
animation <- c(frame1, frame2, frame3, frame4, frame5)

# Animate the combined frames
animated_meme <- image_animate(animation, fps = 0.7)

# Display the animated meme
print(animated_meme)

# Save the animated meme as a GIF
image_write(animated_meme, "my_animation.gif.gif")
```

![](my_animation.gif.gif)

## Creativity
In this project, I've used the 'magick' package and advanced CSS techniques to demonstrate creativity beyond the foundational lessons from lectures and labs. I've incorporated a coin flip function to dynamically alter the meme's text, creating a unique and interactive experience with each execution. This showcases creative technical skills in R and adds an element of unpredictability and engagement. My CSS customisations, particularly in styling code blocks, enhance the document's overall aesthetics and reflect a commitment to form and function. These efforts exemplify my dedication to pushing the boundaries of data visualisation and presentation, highlighting the creative potential within machine learning and data visualisation.

## Learning reflection
In Module 1, I learned the transformative power of combining modern technologies to create compelling HTML content. This lesson was engaging to learn individual tools such as R, Markdown, and CSS and how their integration can elevate the presentation and engagement of data. This approach to data presentation reshapes how I think about storytelling with data, making it more accessible and engaging. My curiosity has been especially ignited by the potential for further exploration into interactive visualisation tools. I am eager to dive deeper into frameworks like Shiny for R, which I have heard turn static data analysis into dynamic web applications. This aligns with my interest in making data analysis more interactive and underlines my belief in the importance of accessibility in data communication. The idea of bridging complex data analysis with user-friendly interfaces is a challenge I am excited to learn more about and recognise its significance in the broader data technology landscape.
